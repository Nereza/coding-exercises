import random
import unittest
import fib as candidate
import time


class TestFibIterative(unittest.TestCase):

    def test_0(self):
        result = candidate.calculate_fib_iterative(0)
        self.assertEqual(result, 0)

    def test_1(self):
        result = candidate.calculate_fib_iterative(1)
        self.assertEqual(result, 1)

    def test_10(self):
        result = candidate.calculate_fib_iterative(10)
        self.assertEqual(result, 55)

    def test_40(self):
        result = candidate.calculate_fib_iterative(40)
        self.assertEqual(result, 102334155)

    def test_100(self):
        result = candidate.calculate_fib_iterative(100)
        self.assertEqual(result, 354224848179261915075)

    def test_200(self):
        result = candidate.calculate_fib_iterative(200)
        self.assertEqual(result, 280571172992510140037611932413038677189525)

    def test_500(self):
        result = candidate.calculate_fib_iterative(500)
        self.assertEqual(result, 139423224561697880139724382870407283950070256587697307264108962948325571622863290691557658876222521294125)

    def test_5000(self):
        result = candidate.calculate_fib_iterative(5000)
        self.assertEqual(result, 3878968454388325633701916308325905312082127714646245106160597214895550139044037097010822916462210669479293452858882973813483102008954982940361430156911478938364216563944106910214505634133706558656238254656700712525929903854933813928836378347518908762970712033337052923107693008518093849801803847813996748881765554653788291644268912980384613778969021502293082475666346224923071883324803280375039130352903304505842701147635242270210934637699104006714174883298422891491273104054328753298044273676822977244987749874555691907703880637046832794811358973739993110106219308149018570815397854379195305617510761053075688783766033667355445258844886241619210553457493675897849027988234351023599844663934853256411952221859563060475364645470760330902420806382584929156452876291575759142343809142302917491088984155209854432486594079793571316841692868039545309545388698114665082066862897420639323438488465240988742395873801976993820317174208932265468879364002630797780058759129671389634214252579116872755600360311370547754724604639987588046985178408674382863125)

    def test_exec_time_523(self):
        numbers = random.sample(range(0, 5000), 530)
        start_time = time.time()
        for n in numbers:
            candidate.calculate_fib_iterative(n)
        end_time = time.time()
        exec_time = end_time - start_time
        print(f'Execution time: {exec_time} seconds')
        self.assertLessEqual(exec_time, 30)


